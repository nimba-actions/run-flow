name: Run Flow
description: 'Execute a named Cumulus flow'
inputs:
  org-name:
    description: 'Name of the scratch org or persistent org config to use'
    required: true
  flow-name:
    description: 'Name of the Cumulus flow to execute'
    required: true
  flow-options:
    description: 'Options for the Cumulus flow to include (format: key="value")'
    required: false
  debug:
    description: 'Display debug logs during Flow Execution'
    required: false
    default: false
    type: boolean
runs:
  using: "composite"
  steps:
    - name: Run Flow
      env:
        CUMULUSCI_SERVICE_github: '{"username": "${{ github.actor }}", "token": "${{ github.token }}", "email": "cci@github.actions" }'
        FLOW_OPTIONS_INPUT: ${{ inputs.flow-options }}
      shell: bash
      run: |
        declare -a FLOW_OPTIONS=()
        if [ -n "$FLOW_OPTIONS_INPUT" ]; then
          # Read the flow-options into an array, splitting on newlines
          while IFS= read -r line; do
            if [ -n "$line" ]; then
              # Split line into key and value on the first '='
              key="${line%%=*}"
              value="${line#*=}"

              # If value is quoted, remove the quotes
              if [[ "$value" =~ ^\".*\"$ ]]; then
                value="${value:1:-1}"
              fi

              # Append the key and value to the FLOW_OPTIONS array
              FLOW_OPTIONS+=(-o "$key" "$value")
            fi
          done <<< "$FLOW_OPTIONS_INPUT"
        fi

        # Debug output
        echo "Flow options: ${FLOW_OPTIONS[@]}"

        # Run the flow with proper array expansion
        if ${{ inputs.debug }}; then
          cci flow run "${{ inputs.flow-name }}" --org "${{ inputs.org-name }}" "${FLOW_OPTIONS[@]}" --debug | tee cumulusci-flow.log
        else
          cci flow run "${{ inputs.flow-name }}" --org "${{ inputs.org-name }}" "${FLOW_OPTIONS[@]}" | tee cumulusci-flow.log
        fi
